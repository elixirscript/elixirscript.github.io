<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Elixirscript</title>
    <link>https://elixirscript.github.io/post/</link>
    <description>Recent content in Posts on Elixirscript</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Jul 2017 19:55:17 -0500</lastBuildDate>
    
	<atom:link href="https://elixirscript.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>elixirscript project update</title>
      <link>https://elixirscript.github.io/post/elixirscript-project-update/</link>
      <pubDate>Mon, 10 Jul 2017 19:55:17 -0500</pubDate>
      
      <guid>https://elixirscript.github.io/post/elixirscript-project-update/</guid>
      <description>A major change is happening to ElixirScript. The compiler has been rewritten to take advantage of features in Erlang 20 and the upcoming Elixir 1.5. The work for this started shortly after my presentation on ElixirScript at Lonestar Elixir. This post will go over the changes that are happening and why.
The Old Compiler ElixirScript&amp;rsquo;s old compiler compiled Elixir source code files. It would take these files and turn the code into the Elixir Abstract Syntax Tree (AST).</description>
    </item>
    
    <item>
      <title>elixirscript 0.27.0 released</title>
      <link>https://elixirscript.github.io/post/elixirscript-0.27.0-released/</link>
      <pubDate>Fri, 17 Mar 2017 20:05:52 -0500</pubDate>
      
      <guid>https://elixirscript.github.io/post/elixirscript-0.27.0-released/</guid>
      <description> For a full list of changes, check out out the changelog.
Here are the major changes in this release:
Super The super special form has been implemented and with it, defoverridable
Global JavaScript Interop Any JavaScript function, property or module in the global namespace can be accessed by using the JS module
JS.alert(&amp;quot;hello&amp;quot;) JS.console.log(&amp;quot;hello&amp;quot;) JS.Date.now()  </description>
    </item>
    
    <item>
      <title>elixirscript 0.26.0 released</title>
      <link>https://elixirscript.github.io/post/elixirscript-0.26.0-released/</link>
      <pubDate>Sat, 25 Feb 2017 16:46:24 -0600</pubDate>
      
      <guid>https://elixirscript.github.io/post/elixirscript-0.26.0-released/</guid>
      <description>For a full list of changes, check out out the changelog.
This version of Elixirscript has a lot of major changes. Here are some of the changes in the new release:
Bundled output This release is the bundle all output into a single file. Now the only file output will be Elixir.App.js.
Removed @on_js_load @on_js_load is no more. To start an application, do the following:
//Note: An ES module example.</description>
    </item>
    
    <item>
      <title>Elixirscript 0.25.0 released</title>
      <link>https://elixirscript.github.io/post/elixirscript-0.25.0-released/</link>
      <pubDate>Sun, 19 Feb 2017 11:28:48 -0600</pubDate>
      
      <guid>https://elixirscript.github.io/post/elixirscript-0.25.0-released/</guid>
      <description>0.25.0 adds some big changes. For a full look at what&amp;rsquo;s new, look at the changelog. Below is a summary of the major changes.
Select module format of output Beginning with this release, the module format of generated JavaScript is selectable. The choices are:
 es - ES Modules (default)
 common - CommonJS modules
 umd - UMD modules
  The common options means you can use the output in node without the need for tools like babel.</description>
    </item>
    
  </channel>
</rss>